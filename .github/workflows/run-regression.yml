name: Run Regression Tests

# on:
  # push:

  # schedule:
  #   - cron: '0 0 * * 0' # weekly
on: repository_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.tag }} ${{ matrix.test_list }}
    strategy:
      matrix:
        tag: [ "6.0.0"]
        test_list : [
                      "connect/connect-salesforce-bulkapi-sink connect/connect-salesforce-bulkapi-source",
                      "connect/connect-salesforce-bulkapi-sink connect/connect-salesforce-bulkapi-source"
                    ]
    env:
      TRAVIS_JOB_NUMBER: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Decrypt secrets.tar
        run: |
          ./.github/scripts/decrypt_secret.sh
          tar xvf secrets.tar
          mkdir -p $HOME/.aws
          cp aws_config $HOME/.aws/config
          cp aws_credentials $HOME/.aws/credentials
          mkdir -p $HOME/.ccloud
          cp config.cc.travis $HOME/.ccloud/config
          aws s3 cp s3://kafka-docker-playground/3rdparty/3rdparty.tgz .
          tar xvfz 3rdparty.tgz
          cp ./3rdparty/TIB_ems-ce_8.5.1_linux_x86_64.zip ./connect/connect-tibco-source/docker-tibco/TIB_ems-ce_8.5.1_linux_x86_64.zip
          cp ./3rdparty/TIB_ems-ce_8.5.1_linux_x86_64.zip ./connect/connect-jms-tibco-sink/docker-tibco/TIB_ems-ce_8.5.1_linux_x86_64.zip
          cp ./3rdparty/TIB_ems-ce_8.5.1_linux_x86_64.zip ./connect/connect-tibco-sink/docker-tibco/TIB_ems-ce_8.5.1_linux_x86_64.zip
          cp ./3rdparty/TIB_ems-ce_8.5.1_linux_x86_64.zip ./connect/connect-jms-tibco-source/docker-tibco/TIB_ems-ce_8.5.1_linux_x86_64.zip
          cp ./3rdparty/ojdbc6.jar ./connect/connect-jdbc-oracle11-sink/ojdbc6.jar
          cp ./3rdparty/ojdbc6.jar ./connect/connect-jdbc-oracle11-source/ojdbc6.jar
          cp ./3rdparty/ojdbc8.jar ./connect/connect-jdbc-oracle12-sink/ojdbc8.jar
          cp ./3rdparty/ojdbc8.jar ./connect/connect-jdbc-oracle12-source/ojdbc8.jar
          cp ./3rdparty/ImpalaJDBC42.jar ./connect/connect-kudu-source/ImpalaJDBC42.jar
          cp ./3rdparty/ImpalaJDBC42.jar ./connect/connect-kudu-sink/ImpalaJDBC42.jar
          cp ./3rdparty/jms.jar ./connect/connect-ibm-mq-sink/jms.jar
          cp ./3rdparty/jms.jar ./connect/connect-ibm-mq-source/jms.jar
          cp ./3rdparty/com.ibm.mq.allclient.jar ./connect/connect-ibm-mq-sink/com.ibm.mq.allclient.jar
          cp ./3rdparty/com.ibm.mq.allclient.jar ./connect/connect-ibm-mq-source/com.ibm.mq.allclient.jar
          cp ./3rdparty/mysql-connector-java-5.1.45.jar ./ccloud/ccloud-demo/mysql-connector-java-5.1.45.jar
          cp ./3rdparty/mysql-connector-java-5.1.45.jar ./connect/connect-debezium-mysql-source/mysql-connector-java-5.1.45.jar
          cp ./3rdparty/mysql-connector-java-5.1.45.jar ./connect/connect-jdbc-mysql-sink/mysql-connector-java-5.1.45.jar
          cp ./3rdparty/mysql-connector-java-5.1.45.jar ./connect/connect-jdbc-mysql-source/mysql-connector-java-5.1.45.jar
          cp ./3rdparty/RedshiftJDBC4-1.2.20.1043.jar ./connect/connect-aws-redshift-sink/RedshiftJDBC4-1.2.20.1043.jar
          cp ./3rdparty/activemq-all-5.15.4.jar ./connect/connect-jms-active-mq-sink/activemq-all-5.15.4.jar
          cp ./3rdparty/commons-lang-2.6.jar ./connect/connect-jms-solace-sink/commons-lang-2.6.jar
          cp ./3rdparty/sol-jms-10.6.4.jar ./connect/connect-jms-solace-sink/sol-jms-10.6.4.jar
          cp ./3rdparty/sol-jms-10.6.4.jar ./connect/connect-solace-sink/sol-jms-10.6.4.jar
          cp ./3rdparty/sol-jms-10.6.4.jar ./connect/connect-solace-source/sol-jms-10.6.4.jar
          cp ./3rdparty/AMPS.tar.gz ./connect/connect-amps-source/docker-amps/AMPS.tar.gz
          cp ./3rdparty/pivotal-gemfire.tgz ./connect/connect-pivotal-gemfire-sink/docker-pivotal-gemfire/pivotal-gemfire.tgz
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        env:
          SECRETS_ENCRYPTION_PASSWORD: ${{ secrets.SECRETS_ENCRYPTION_PASSWORD }}

      - name: Build and Test
        run: bash scripts/run-tests.sh "${{ matrix.test_list }}" "${{ matrix.tag }}"
        env:
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_PASSWORD: ${{ secrets.CONSUMER_PASSWORD }}
          SALESFORCE_INSTANCE: ${{ secrets.SALESFORCE_INSTANCE }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
          SECURITY_TOKEN: ${{ secrets.SECURITY_TOKEN }}
          SALESFORCE_USERNAME_ACCOUNT2: ${{ secrets.SALESFORCE_USERNAME_ACCOUNT2 }}
          SALESFORCE_PASSWORD_ACCOUNT2: ${{ secrets.SALESFORCE_PASSWORD_ACCOUNT2 }}
          SECURITY_TOKEN_ACCOUNT2: ${{ secrets.SECURITY_TOKEN_ACCOUNT2 }}
          CONSUMER_KEY_ACCOUNT2: ${{ secrets.CONSUMER_KEY_ACCOUNT2 }}
          CONSUMER_PASSWORD_ACCOUNT2: ${{ secrets.CONSUMER_PASSWORD_ACCOUNT2 }}
